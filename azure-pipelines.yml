trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: test

  jobs:
  - job: sonar
    displayName: Analyse code with SonarQube

    steps:
    - task: SonarCloudPrepare@1
      displayName: 'Prepare SonarCloud analysis'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'aqualityautomation'
        projectKey: 'aquality-automation_aquality-winappdriver-dotnet'
        projectName: 'aquality-winappdriver-dotnet'
        projectVersion: '$(Build.BuildNumber)'
        extraProperties: |
          sonar.coverage.exclusions=**/**

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: Aquality.WinAppDriver/Aquality.WinAppDriver.sln
        arguments: -c $(buildConfiguration)

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud code analysis'
      continueOnError: true

    - task: SonarCloudPublish@1
      displayName: 'Publish SonarCloud quality gate results'

  - job: tests
    displayName: Run tests

    variables:
      isRemote: true

    steps:
    - task: ScreenResolutionUtility@1
      displayName: 'Set up screen resolution 1920x1080'
      inputs:
        displaySettings: 'specific'
        width: '1920'
        height: '1080'
        
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '16.x'

    - task: CmdLine@2
      displayName: 'Install Appium'
      inputs:
        script: |
            echo "Installing Appium"
            npm install -g appium@next
            appium --version
            echo "Appium installed"
            
    - task: CmdLine@2
      displayName: 'Install and Run Appium doctor'
      inputs:
        script: |
          echo "Installing and Running Appium doctor"
          npm install -g request@2.34.0
          npm install -g appium-doctor@1.15.1
          appium-doctor
          echo "Appium doctor installed and executed"

    - task: CmdLine@2
      displayName: 'Install Appium Windows Driver'
      inputs:
        script: |
          echo "Installing Appium Windows Driver"
          appium driver install --source=npm appium-windows-driver
          appium driver list
          echo "Appium Windows Driver installed"

    - task: CmdLine@2
      displayName: 'Start Appium server'
      inputs:
        script: |
          start cmd.exe @cmd /k "appium"
          echo "Appium server started"

    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '**/*Tests*/*.csproj'
        arguments: -c $(buildConfiguration)
        publishTestResults: true
        

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  jobs:
  - job: release
    displayName: 'Create tag on GitHub and publish NuGet package'

    steps:
    - task: gitversion/setup@0
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      inputs:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'

    - script: dotnet pack Aquality.WinAppDriver\src\Aquality.WinAppDriver\Aquality.WinAppDriver.csproj -c $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersion) -o $(Build.ArtifactStagingDirectory)
      displayName: 'Pack to NuGet package'

    - task: GitHubRelease@0
      displayName: 'Create tag on GitHub'
      inputs:
        gitHubConnection: 'github.com_aqualityautomation'
        repositoryName: 'aquality-automation/aquality-winappdriver-dotnet'
        action: 'create'
        tag: 'v$(GitVersion.NuGetVersion)'
        title: 'v$(GitVersion.NuGetVersion)'
        tagSource: 'manual'
        isPreRelease: contains(variables['GitVersion.NuGetVersion'], '-')

    - task: NuGetCommand@2
      displayName: 'Push NuGet package'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Aquality.WinAppDriver*.nupkg;!$(Build.ArtifactStagingDirectory)/**/Aquality.WinAppDriver*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'NuGet'